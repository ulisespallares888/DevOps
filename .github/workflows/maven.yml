name: Java CI with Maven, MySQL & Redis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'   # Cambi√° a 23 si tu proyecto lo requiere
          distribution: 'temurin'
          cache: maven

      - name: Wait for MySQL
        run: |
          for i in {1..15}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 --protocol=tcp -uroot -proot --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Build with Maven
        run: cd API && mvn -B clean package --file pom.xml -DskipTests

      - name: Run Tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
          SPRING_REDIS_HOST: 127.0.0.1
          SPRING_REDIS_PORT: 6379
        run: mvn test

      # Opcional: subir el grafo de dependencias a GitHub
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v4
